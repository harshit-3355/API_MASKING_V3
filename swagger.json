{
    "openapi": "3.0.3",
    "info": {
      "title": "Dynamic Data Proxy API",
      "version": "1.0.0",
      "description": "API to dynamically route, authenticate and filter datasets based on CLIENT and PARAMETERS."
    },
    "servers": [
      {
        "url": "http://localhost:5000",
        "description": "Local development server"
      }
    ],
    "paths": {
      "/generate_all": {
        "get": {
          "summary": "Generate or Update Client Credentials and Routing URIs",
          "description": "Fetches data from the backend API, generates credentials for new clients, updates URIs, and writes back updated info.",
          "responses": {
            "200": {
              "description": "Credentials generated and table updated.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "inserted": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      },
                      "note": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error."
            }
          }
        }
      },
      "/demo/{parameter}": {
        "get": {
          "summary": "Proxy Data Fetch and Filtering",
          "description": "Authenticates the user, fetches data from BASE_URI linked to the parameter, applies optional filters based on query parameters, and returns the result.",
          "parameters": [
            {
              "name": "parameter",
              "in": "path",
              "required": true,
              "description": "The specific dataset identifier (PARAMETER field from table).",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "description": "Basic Authentication header (Base64 encoded username:password).",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "filter_fields",
              "in": "query",
              "required": false,
              "description": "Any additional field(s) you want to filter on. E.g. ?Payer=SpaceX,Amazon&PAYMENT_TYPE=MEDICARE",
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Filtered dataset fetched successfully.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object"
                  }
                }
              }
            },
            "400": {
              "description": "Missing or invalid authentication."
            },
            "401": {
              "description": "Unauthorized: Invalid credentials."
            },
            "404": {
              "description": "No matching PARAMETER found."
            },
            "500": {
              "description": "Internal server error."
            }
          }
        }
      }
    },
    "components": {}
  }
  